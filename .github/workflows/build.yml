name: Build NTK Ultra-Compression

on:
  push:
    branches: [ main ]
    tags: [ 'v*' ]
  pull_request:
    branches: [ main ]

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    name: Build ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        include:
          - os: ubuntu-latest
            output_name: ntk-ultra-compression
            asset_name: ntk-ultra-compression-linux
          - os: windows-latest
            output_name: ntk-ultra-compression.exe
            asset_name: ntk-ultra-compression-windows
          - os: macos-latest
            output_name: ntk-ultra-compression
            asset_name: ntk-ultra-compression-macos

    steps:
    - uses: actions/checkout@v3

    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: gui/package-lock.json

    - name: Install Rust
      uses: dtolnay/rust-toolchain@stable

    - name: Install Linux dependencies
      if: matrix.os == 'ubuntu-latest'
      run: |
        sudo apt-get update
        sudo apt-get install -y libgtk-3-dev libwebkit2gtk-4.0-dev libappindicator3-dev librsvg2-dev patchelf

    - name: Install dependencies
      run: |
        cd gui
        npm install

    - name: Build
      run: |
        cd gui
        npm run tauri build

    - name: Create build directory
      run: mkdir -p build

    - name: Copy binary (Linux/macOS)
      if: matrix.os != 'windows-latest'
      run: |
        cp gui/src-tauri/target/release/${{ matrix.output_name }} build/${{ matrix.asset_name }}

    - name: Copy binary (Windows)
      if: matrix.os == 'windows-latest'
      run: |
        copy gui\src-tauri\target\release\${{ matrix.output_name }} build\${{ matrix.asset_name }}.exe

    - name: Upload artifacts
      uses: actions/upload-artifact@v3
      with:
        name: ${{ matrix.asset_name }}
        path: build/${{ matrix.asset_name }}${{ matrix.os == 'windows-latest' && '.exe' || '' }}
        if-no-files-found: error

  create-release:
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v')
    
    steps:
    - name: Download artifacts
      uses: actions/download-artifact@v3
      with:
        path: build

    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        files: |
          build/ntk-ultra-compression-linux/ntk-ultra-compression-linux
          build/ntk-ultra-compression-windows/ntk-ultra-compression-windows.exe
          build/ntk-ultra-compression-macos/ntk-ultra-compression-macos
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 